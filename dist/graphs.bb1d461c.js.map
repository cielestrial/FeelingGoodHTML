{"mappings":"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","sources":["js/main.js","node_modules/core-js/internals/not-a-regexp.js","node_modules/core-js/internals/correct-is-regexp-logic.js","node_modules/core-js/modules/es.string.includes.js","node_modules/core-js/internals/this-number-value.js","node_modules/core-js/internals/string-repeat.js","node_modules/core-js/modules/es.number.to-fixed.js"],"sourcesContent":["/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n/*\r\n const babel = require(\"@babel/core\");\r\n babel.transform(\"code\", optionsObject);\r\n import Chart from 'chart.js/auto';\r\n import \"core-js/stable\";\r\n import \"regenerator-runtime/runtime\";\r\n import { saveAs } from 'file-saver';\r\n import clone from 'just-clone';\r\n */\r\n\r\n\"use strict\";\r\n// Survey Report\r\nconst SurveyReport = {\r\n  surveyID: \"\",\r\n  userID: \"\",\r\n  date: {\r\n    year: 0,\r\n    month: 0,\r\n    week: \"\",\r\n    day: 0\r\n  },\r\n  surveyValues: [],\r\n  surveyResult: 0,\r\n  comment: \"hello world!\"\r\n};\r\nlet SurveyReports = [],\r\n  CanvasCount = 0;\r\n\r\n/**\r\n * Logs the Survey Table values and result\r\n *  to the Survey Report object.\r\n * @param {docElement} table The table to read the data from.\r\n * @returns {undefined}\r\n */\r\nfunction tableHandler(table) {\r\n  let surveyResult = 0;\r\n  // row traversal logic\r\n  const rows = table.rows;\r\n  for (let i = 0; i < rows.length; i++) {\r\n    // radio-button-group traversal logic\r\n    let radioButtonGroup = document.getElementsByName(`question${i + 1}`);\r\n    for (let j = 0; j < radioButtonGroup.length; j++) {\r\n      if (radioButtonGroup[j].checked) {\r\n        // debug\r\n        console.log(`Value: ${+radioButtonGroup[j].value}`);\r\n        // arithmetic\r\n        SurveyReport.surveyValues.push(radioButtonGroup[j].value);\r\n        surveyResult += +radioButtonGroup[j].value;\r\n        // visual reset\r\n        radioButtonGroup[j].checked = false;\r\n        break;\r\n      }\r\n    }\r\n    // debug\r\n    console.log(`Sum: ${surveyResult}`);\r\n  }\r\n  SurveyReport.surveyResult = surveyResult;\r\n}\r\n\r\n/**\r\n * Logs the user's comment to the\r\n *  Survey Report object\r\n * @returns {undefined}\r\n */\r\nfunction getComment() {\r\n  let textArea = document.getElementById(\"textArea\");\r\n  SurveyReport.comment = textArea.value;\r\n  textArea.value = \"\";\r\n  // Debug\r\n  // console.log(\"Text: \" + SurveyReport.comment);\r\n}\r\n\r\n/**\r\n * Logs date form was completed\r\n *  to the Survey Report object\r\n * Format: Weekday Month NumDay Year\r\n *  - Short form of Weekday and Month used\r\n *  - Sepearated by spaces\r\n * @returns {undefined}\r\n */\r\nfunction getDate() {\r\n  // Get date\r\n  const d = new Date();\r\n  let currentDay, weekStart, weekEnd;\r\n  SurveyReport.date.year = d.getFullYear();\r\n  SurveyReport.date.month = d.getMonth();\r\n  SurveyReport.date.day = d.getDate();\r\n  currentDay = d.getDay();\r\n  weekStart = new Date(\r\n    SurveyReport.date.year,\r\n    SurveyReport.date.month,\r\n    SurveyReport.date.day - currentDay\r\n  );\r\n  weekEnd = new Date(\r\n    SurveyReport.date.year,\r\n    SurveyReport.date.month,\r\n    SurveyReport.date.day + (6 - currentDay)\r\n  );\r\n  SurveyReport.date.week = `${weekStart.getDate()},${weekEnd.getDate()}`;\r\n  // debug\r\n  console.log(SurveyReport.date.toString());\r\n}\r\n\r\n/**\r\n * Logs userID to the\r\n *  Survey Report object\r\n * @returns {undefined}\r\n */\r\nfunction getUserID() {\r\n  let userID = \"anon\";\r\n  SurveyReport.userID = userID;\r\n}\r\n\r\n/**\r\n * Compiles a user record that can be\r\n *  logged and charted\r\n * ?asynchronously?\r\n * @param {String} ID The table it is reading from.\r\n * @returns {undefined}\r\n */\r\nfunction submitForm(ID) {\r\n  // Get userid\r\n  getUserID();\r\n  // Get date\r\n  getDate();\r\n  // Get depression table info & comment\r\n  SurveyReport.surveyID = ID;\r\n  const table = document.getElementById(\"SurveyTable\");\r\n  tableHandler(table);\r\n  getComment();\r\n  // Store and read data\r\n  saveData(SurveyReport);\r\n  readDataFromStorage(ID);\r\n  // Graph data\r\n  graphData(ID);\r\n}\r\n\r\n/**\r\n * Saves survey data to the\r\n *  browser's local storage\r\n * @since Delimiter hierarchy (highest to lowest):\r\n *  \";\" -> \":\" -> \"-\" or \",\".\r\n *  \"!\" operator returns true if null\r\n *  \"~\" operator returns true if not -1\r\n *  @param {Object} data The SurveyReport object\r\n *   to be stored.\r\n * @returns {undefined}\r\n */\r\nfunction saveData(data) {\r\n  if (typeof window.Storage !== \"undefined\") {\r\n    let flag = false;\r\n    let key = `${data.surveyID};${data.date.year}:${data.date.month}`;\r\n    let valueRange = `w:${data.date.week}`;\r\n    let value = `d:${data.date.day}:${data.surveyValues.toString()}:${\r\n      data.surveyResult\r\n    }:${data.comment}`;\r\n    // Debug\r\n    // console.log(\"length = \" + localStorage.length);\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      // If a key with the same ID already exists\r\n      if (localStorage.key(i).charAt(0) === data.surveyID) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    let oldData = localStorage.getItem(key);\r\n    // \"!\" operator returns true if null\r\n    // New entry\r\n    if (!oldData) {\r\n      // New month\r\n      if (flag) {\r\n        // Save data to file system\r\n        let fKey, fValue, blob;\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          fKey = localStorage.key(i);\r\n          fValue = localStorage.getItem(fKey);\r\n          blob = new Blob([`${fValue}`], { type: \"text/plain;charset=utf-8\" });\r\n          saveAs(blob, `${fKey}.txt`);\r\n        }\r\n        clearLocalStorage();\r\n      }\r\n      console.log(\"creating save for \" + data.surveyID);\r\n      localStorage.setItem(key, `${key};${valueRange}:${value}`);\r\n    } else {\r\n      // \"~\" operator returns true if not -1\r\n      // Existing key; week range conflict\r\n      if (oldData.includes(valueRange)) {\r\n        // Existing key; week range conflict; day conflict\r\n        if (oldData.includes(`d:${data.date.day}`)) {\r\n          localStorage.setItem(\r\n            key,\r\n            `${oldData.slice(\r\n              0,\r\n              oldData.lastIndexOf(`:d:${data.date.day}:`) + 0\r\n            )}:${value}`\r\n          );\r\n        } else {\r\n          // Existing key; week range conflict; no day conflict\r\n          localStorage.setItem(key, `${oldData}:${value}`);\r\n        }\r\n      } else {\r\n        // Existing key; no week range conflict\r\n        localStorage.setItem(key, `${oldData};${valueRange}:${value}`);\r\n      }\r\n    }\r\n    // Debug\r\n    // clearLocalStorage();\r\n    checkStorageSize();\r\n  }\r\n}\r\n\r\n/**\r\n * Read data from local storage\r\n * @param {String} ID The table it is reading from.\r\n * @returns {undefined}\r\n */\r\nfunction readDataFromStorage(ID) {\r\n  if (ID === \"\") {\r\n    if (SurveyReports.length > 0) {\r\n      ID = SurveyReports[0].surveyID;\r\n    }\r\n  }\r\n  for (let i = 0; i < localStorage.length; i++) {\r\n    // If a key with the same ID already exists\r\n    if (\r\n      localStorage.key(i).charAt(0) === ID &&\r\n      localStorage.key(i).charAt(1) === \";\"\r\n    ) {\r\n      let storedData = localStorage.getItem(localStorage.key(i));\r\n      parseData(storedData);\r\n      graphData(storedData.charAt(0));\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Read data from file\r\n * @returns {undefined}\r\n */\r\nfunction readDataFromFile() {\r\n  let fileName = document.getElementById(\"formFile\").files[0];\r\n  let fileReader = new FileReader();\r\n  fileReader.onload = function (loadedFile) {\r\n    let storedData = loadedFile.target.result;\r\n    // Debug\r\n    // console.log(storedData);\r\n    parseData(storedData);\r\n    graphData(storedData.charAt(0));\r\n  };\r\n  fileReader.onerror = function (loadedFile) {\r\n    alert(\r\n      \"Failed to read file.\" +\r\n        \"\\n\" +\r\n        \"Please make sure you are inputting the correct file.\" +\r\n        \"\\n\" +\r\n        \"Example filename: D;2021_8.txt\"\r\n    );\r\n  };\r\n  fileReader.readAsText(fileName);\r\n}\r\n\r\n/**\r\n * Parses data\r\n * @since Delimiter hierarchy (highest to lowest):\r\n *  \";\" -> \":\" -> \"-\" or \",\".\r\n * @param {String} storedData The string data to parse.\r\n * @returns {undefined}\r\n */\r\nfunction parseData(storedData) {\r\n  try {\r\n    let highLevel = [],\r\n      key = [];\r\n    let newSurveyReport = {},\r\n      midLevel = [];\r\n    highLevel = storedData.split(\";\");\r\n    key = highLevel[1].split(\":\");\r\n    for (let x = 2; x < highLevel.length; x++) {\r\n      newSurveyReport = clone(SurveyReport);\r\n      newSurveyReport.surveyID = highLevel[0]; // String\r\n      newSurveyReport.date.year = +key[0]; // Integer\r\n      newSurveyReport.date.month = +key[1]; // Integer\r\n\r\n      midLevel = highLevel[x].split(\":\");\r\n      newSurveyReport.date.week = midLevel[1]; // String\r\n      newSurveyReport.date.day = +midLevel[3]; // Integer\r\n      newSurveyReport.surveyValues = midLevel[4].split(\",\"); // Integer Array\r\n      /*\r\n             for (let y = 0; y < newSurveyReport.surveyValues.length; y++) {\r\n             newSurveyReport.surveyValues[y] = +newSurveyReport.surveyValues[y];\r\n             }\r\n             */\r\n      newSurveyReport.surveyResult = +midLevel[5]; // Integer\r\n      newSurveyReport.comment = midLevel[6]; // String\r\n\r\n      SurveyReports.push(newSurveyReport);\r\n    }\r\n  } catch (error) {\r\n    alert(\r\n      \"Failed to parse file.\" +\r\n        \"\\n\" +\r\n        \"Please make sure you are inputting the correct file.\" +\r\n        \"\\n\" +\r\n        \"Example filename: D;2021_8.txt\"\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Checks the current storage size\r\n *  of the browser's local storage\r\n * @returns {undefined}\r\n */\r\nfunction checkStorageSize() {\r\n  var _lsTotal = 0,\r\n    _xLen,\r\n    _x;\r\n  for (_x in localStorage) {\r\n    if (!localStorage.hasOwnProperty(_x)) {\r\n      continue;\r\n    }\r\n    _xLen = (localStorage[_x].length + _x.length) * 2;\r\n    _lsTotal += _xLen;\r\n    console.log(_x.substr(0, 50) + \" = \" + (_xLen / 1024).toFixed(2) + \" KB\");\r\n  }\r\n  console.log(\"Total = \" + (_lsTotal / 1024).toFixed(2) + \" KB out of 5000 KB\");\r\n}\r\n\r\n/**\r\n * Creates a line graph and\r\n *  populates it with data from the\r\n *  Survey Report object\r\n * @param {String} ID The survey ID to determine\r\n *  which type of survey to graph.\r\n * @returns {undefined}\r\n */\r\nfunction graphData(ID) {\r\n  if (SurveyReports.length > 0) {\r\n    if (ID === \"\") {\r\n      ID = SurveyReports[0].surveyID;\r\n    }\r\n    let container = document.getElementsByClassName(\"container-fluid\");\r\n    container = container[container.length - 1];\r\n    let newDiv = document.createElement(\"div\"),\r\n      newCanvas = document.createElement(\"canvas\"),\r\n      ctx;\r\n    CanvasCount++;\r\n    newDiv.class = \"canvas-container\";\r\n    newDiv.style.margin = \"auto auto 4em\";\r\n    newCanvas.id = `canvas${CanvasCount}`;\r\n    newCanvas.width = \"300\";\r\n    newCanvas.height = \"300\";\r\n    newCanvas.style.backgroundColor = \"white\";\r\n    newCanvas.textContent =\r\n      \"Your browser does not support the &lt;canvas&gt; element.\";\r\n    container.parentNode.insertBefore(newDiv, container.nextSibling);\r\n    newDiv.appendChild(newCanvas);\r\n    ctx = document.getElementById(`canvas${CanvasCount}`).getContext(\"2d\");\r\n    // X-axis labels\r\n    /*\r\n         let d, currentDay, weekStart, weekEnd, weeks = [];\r\n         for (let x = 1; x < 32; x += 7) {\r\n         d = new Date(data.date.year, data.date.month, x);\r\n         currentDay = d.getDay();\r\n         weekStart = new Date(d.getFullYear(), d.getMonth(), x - currentDay);\r\n         weekEnd = new Date(d.getFullYear(), d.getMonth(), x + (6 - currentDay));\r\n         weeks.push(`${weekStart.getDate()} - ${weekEnd.getDate()}`);\r\n         }\r\n         */\r\n\r\n    // Graph title\r\n    const Months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    let title;\r\n    if (ID === \"D\") {\r\n      title = `${Months[SurveyReports[0].date.month]} ${\r\n        SurveyReports[0].date.year\r\n      } Depression Survey`;\r\n    } else if (ID === \"A\") {\r\n      title = `${Months[SurveyReports[0].date.month]} ${\r\n        SurveyReports[0].date.year\r\n      } Anxiety Survey`;\r\n    }\r\n\r\n    // Graph points\r\n    let xAxis = [],\r\n      points = [],\r\n      comments = Array.apply(null, Array(31)).map(function (x, i) {\r\n        return \"\";\r\n      });\r\n    SurveyReports.forEach(report => {\r\n      if (report.surveyID === ID) {\r\n        xAxis.push(report.date.day);\r\n        points.push(report.surveyResult);\r\n        comments[report.date.day - 1] = report.comment;\r\n      }\r\n    });\r\n    const legend = {\r\n      labels: xAxis, //change to dates\r\n      datasets: [\r\n        {\r\n          label: title,\r\n          backgroundColor: \"#006ee0\",\r\n          borderColor: \"#006ee0\",\r\n          data: points\r\n        }\r\n      ]\r\n    };\r\n    Chart.defaults.font.size = 16;\r\n    Chart.defaults.color = \"#000000\";\r\n    new Chart(ctx, {\r\n      type: \"line\",\r\n      data: legend,\r\n      options: {\r\n        scale: {\r\n          y: {\r\n            min: 0,\r\n            max: 200,\r\n            ticks: {\r\n              beginAtZero: true,\r\n              stepSize: 10\r\n            }\r\n          }\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          tooltip: {\r\n            // Disable the on-canvas tooltip\r\n            intersect: false,\r\n            enabled: false,\r\n            external: function (context) {\r\n              var tooltipComment = \"\";\r\n              // Tooltip Element\r\n              var tooltipEl = document.getElementById(\"chartjs-tooltip\");\r\n\r\n              // Create element on first render\r\n              if (!tooltipEl) {\r\n                tooltipEl = document.createElement(\"div\");\r\n                tooltipEl.id = \"chartjs-tooltip\";\r\n                tooltipEl.innerHTML = \"<table></table>\";\r\n                document.body.appendChild(tooltipEl);\r\n              }\r\n\r\n              // Hide if no tooltip\r\n              var tooltipModel = context.tooltip;\r\n              if (tooltipModel.opacity === 0) {\r\n                tooltipEl.style.opacity = 0;\r\n                return;\r\n              }\r\n\r\n              // Set caret Position\r\n              tooltipEl.classList.remove(\"above\", \"below\", \"no-transform\");\r\n              if (tooltipModel.yAlign) {\r\n                tooltipEl.classList.add(tooltipModel.yAlign);\r\n              } else {\r\n                tooltipEl.classList.add(\"no-transform\");\r\n              }\r\n\r\n              function getBody(bodyItem) {\r\n                return bodyItem.lines;\r\n              }\r\n\r\n              // Set Text\r\n              if (tooltipModel.body) {\r\n                var titleLines = tooltipModel.title || [];\r\n                var bodyLines = tooltipModel.body.map(getBody);\r\n\r\n                var innerHtml = \"<thead>\";\r\n\r\n                titleLines.forEach(function (title) {\r\n                  if (title === \"1\") {\r\n                    innerHtml +=\r\n                      \"<tr><th>\" + \"Date: \" + title + \"st\" + \"</th></tr>\";\r\n                  } else if (title === \"2\") {\r\n                    innerHtml +=\r\n                      \"<tr><th>\" + \"Date: \" + title + \"nd\" + \"</th></tr>\";\r\n                  } else if (title === \"3\") {\r\n                    innerHtml +=\r\n                      \"<tr><th>\" + \"Date: \" + title + \"rd\" + \"</th></tr>\";\r\n                  } else {\r\n                    innerHtml +=\r\n                      \"<tr><th>\" + \"Date: \" + title + \"th\" + \"</th></tr>\";\r\n                  }\r\n                  tooltipComment = comments[title - 1];\r\n                });\r\n                innerHtml += \"</thead><tbody>\";\r\n                bodyLines.forEach(function (body, i) {\r\n                  var colors = tooltipModel.labelColors[i];\r\n                  var style = \"background:\" + colors.backgroundColor;\r\n                  style += \"; border-color:\" + colors.borderColor;\r\n                  style += \"; border-width: 2px\";\r\n                  var span = '<span style=\"' + style + '\"></span>';\r\n                  innerHtml +=\r\n                    \"<tr><td>\" +\r\n                    span +\r\n                    body +\r\n                    \"<br>\" +\r\n                    \"Comment: \" +\r\n                    tooltipComment +\r\n                    \"</td></tr>\";\r\n                });\r\n                innerHtml += \"</tbody>\";\r\n\r\n                var tableRoot = tooltipEl.querySelector(\"table\");\r\n                tableRoot.innerHTML = innerHtml;\r\n              }\r\n\r\n              var position = context.chart.canvas.getBoundingClientRect();\r\n              var bodyFont = Chart.helpers.toFont(\r\n                tooltipModel.options.bodyFont\r\n              );\r\n\r\n              // Display, position, and set styles for font\r\n              tooltipEl.style.opacity = 1;\r\n              tooltipEl.style.position = \"absolute\";\r\n              tooltipEl.style.left =\r\n                position.left + window.pageXOffset + tooltipModel.caretX + \"px\";\r\n              tooltipEl.style.top =\r\n                position.top + window.pageYOffset + tooltipModel.caretY + \"px\";\r\n              tooltipEl.style.font = bodyFont.string;\r\n              tooltipEl.style.fontSize = \"calc(12px + 0.1vw)\";\r\n              tooltipEl.style.backgroundColor = \"#333333\";\r\n              tooltipEl.style.color = \"#cccccc\";\r\n              tooltipEl.style.padding = \"10px\";\r\n              tooltipEl.style.pointerEvents = \"none\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    SurveyReports = [];\r\n  }\r\n}\r\n\r\nlet isOpen = false;\r\nlet parent = document.getElementById(\"swappingNav\");\r\nlet switching;\r\nlet target = document.getElementsByClassName(\"collapse\")[0];\r\nfunction swapElements() {\r\n  target.addEventListener(\"show.bs.collapse\", function () {\r\n    switching = document.getElementsByClassName(\"swap\");\r\n    parent.insertBefore(switching[1], switching[0]);\r\n    window.addEventListener(\"resize\", handleResize);\r\n  });\r\n  target.addEventListener(\"hidden.bs.collapse\", function () {\r\n    switching = document.getElementsByClassName(\"swap\");\r\n    parent.insertBefore(switching[1], switching[0]);\r\n    window.removeEventListener(\"resize\", handleResize);\r\n  });\r\n}\r\nfunction handleResize() {\r\n  if (window.innerWidth >= 992 && !isOpen) {\r\n    switching = document.getElementsByClassName(\"swap\");\r\n    parent.insertBefore(switching[1], switching[0]);\r\n    isOpen = true;\r\n  } else if (window.innerWidth < 992 && isOpen) {\r\n    switching = document.getElementsByClassName(\"swap\");\r\n    parent.insertBefore(switching[1], switching[0]);\r\n    isOpen = false;\r\n  }\r\n}\r\n\r\nfunction loadLocalGraphs() {\r\n  let path = location.pathname,\r\n    page = path.slice(path.lastIndexOf(\"/\") + 1);\r\n  if (page === \"graphs.html\") {\r\n    readDataFromStorage(\"D\");\r\n    readDataFromStorage(\"A\");\r\n  }\r\n}\r\n\r\nfunction onloader() {\r\n  swapElements();\r\n  loadLocalGraphs();\r\n}\r\nonload = onloader();\r\n\r\nfunction clearLocalStorage() {\r\n  let confirmation = confirm(\r\n    \"Are you sure you want to erase browser storage data?\"\r\n  );\r\n  if (confirmation === true) {\r\n    localStorage.clear();\r\n  }\r\n}\r\n\r\nfunction displaySafetyAlert() {\r\n  alert(\r\n    \"If, at any point, your thoughts turn into urges, please seek immediate help.\"\r\n  );\r\n}\r\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~toString(requireObjectCoercible(this))\n      .indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n"],"names":["day","$iJKo2","parcelRequire","$8997e85c68cee939$exports","it","TypeError","$9bac6050c12c390e$var$MATCH","$blCy8","$hmx0d","target","proto","forced","METHOD_NAME","regexp","error1","error2","$9bac6050c12c390e$exports","includes","searchString","$jqSLA","$gMtBp","this","indexOf","arguments","length","undefined","surveyValues","surveyResult","$faIBy","$e586a121cfe43578$exports","value","$6296d640307773eb$exports","count","str","result","n","$23FBi","Infinity","RangeError","$e48bed440c368eb6$var$nativeToFixed","toFixed","$e48bed440c368eb6$var$floor","Math","floor","$e48bed440c368eb6$var$pow","x","acc","$e48bed440c368eb6$var$multiply","data","c","index","c2","$e48bed440c368eb6$var$divide","$e48bed440c368eb6$var$dataToString","s","t","String","call","$8lFU3","fractionDigits","e","z","j","k","number","fractDigits","sign","x2","$e48bed440c368eb6$var$log","slice","$77ac944da51b7354$var$SurveyReport","SurveyReports","userID","date","year","month","week","radioButtonGroup","console","SurveyReport","$77ac944da51b7354$var$CanvasCount","localStorage","ID","_xLen","_lsTotal","i","key","charAt","storedData","getItem","$77ac944da51b7354$var$parseData","highLevel","newSurveyReport","midLevel","split","title","clone","xAxis","points","comments","Array","surveyID","report","labels","comment","datasets","push","$77ac944da51b7354$var$SurveyReports","intersect","getElementsByClassName","enabled","ctx","external","context","document","createElement","tooltipEl","body","insertBefore","tooltipModel","tooltip","concat","opacity","span","innerHtml","Months","tooltipComment","apply","forEach","position","bodyFont","Chart","defaults","font","size","color","isOpen","parent","switching","swapElements","addEventListener","beginAtZero","responsive","maintainAspectRatio","handleResize","innerWidth","id","loadLocalGraphs","path","lastIndexOf","readDataFromStorage","classList","add","clear","titleLines","displaySafetyAlert","map","onloader","onload","clearLocalStorage","lines","style"],"version":3,"file":"graphs.bb1d461c.js.map"}